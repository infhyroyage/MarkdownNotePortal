name: Deploy All AWS Resources

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/deploy-resources.yaml
      - resources/**

jobs:
  build-and-deploy-lambdas:
    uses: ./.github/workflows/reusable-build-and-deploy-lambdas.yaml
    with:
      S3_LAMBDA_BUCKET_NAME: ${{ vars.S3_LAMBDA_BUCKET_NAME }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-stack-waf:
    needs: build-and-deploy-lambdas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials for us-east-1
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Stack with WAF
        run: |
          aws cloudformation deploy \
            --template-file resources/cfn-waf.yaml \
            --stack-name mkmemoportal-stack-waf \
            --region us-east-1

      - name: Describe Stack with WAF Events on Failure
        if: failure()
        run: |
          echo "=== CloudFormation Stack with WAF Events (Recent) ==="
          aws cloudformation describe-stack-events \
            --stack-name mkmemoportal-stack-waf \
            --region us-east-1 \
            --max-items 50 \
            --query 'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`UPDATE_FAILED` || ResourceStatus==`DELETE_FAILED` || ResourceStatus==`ROLLBACK_IN_PROGRESS`].[Timestamp,ResourceType,LogicalResourceId,ResourceStatus,ResourceStatusReason]' \
            --output table || true

  deploy-stack:
    needs: deploy-stack-waf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Deploy Stack without WAF
        run: |
          WAF_WEB_ACL_ARN=$(aws cloudformation describe-stacks \
            --stack-name mkmemoportal-stack-waf \
            --region us-east-1 \
            --query 'Stacks[0].Outputs[?OutputKey==`WafWebAclArn`].OutputValue' \
            --output text)
          aws cloudformation deploy \
            --template-file resources/cfn.yaml \
            --stack-name mkmemoportal-stack \
            --region ap-northeast-1 \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              CognitoHostedUISubDomain=${{ vars.COGNITO_HOSTED_UI_SUBDOMAIN }} \
              S3LambdaBucketName=${{ vars.S3_LAMBDA_BUCKET_NAME }} \
              S3SpaBucketName=${{ vars.S3_SPA_BUCKET_NAME }} \
              WafWebAclArn=${WAF_WEB_ACL_ARN}

      - name: Describe Stack without WAF Events on Failure
        if: failure()
        run: |
          echo "=== CloudFormation Stack without WAF Events (Recent) ==="
          aws cloudformation describe-stack-events \
            --stack-name mkmemoportal-stack \
            --region ap-northeast-1 \
            --max-items 50 \
            --query 'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`UPDATE_FAILED` || ResourceStatus==`DELETE_FAILED` || ResourceStatus==`ROLLBACK_IN_PROGRESS`].[Timestamp,ResourceType,LogicalResourceId,ResourceStatus,ResourceStatusReason]' \
            --output table || true

  build-and-deploy-spa:
    needs: deploy-stack
    uses: ./.github/workflows/reusable-build-and-deploy-spa.yaml
    with:
      S3_SPA_BUCKET_NAME: ${{ vars.S3_SPA_BUCKET_NAME }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

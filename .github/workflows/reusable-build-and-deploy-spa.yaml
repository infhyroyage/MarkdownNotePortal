name: Build and Deploy SPA (Reusable Workflow)

on:
  workflow_call:
    inputs:
      S3_SPA_BUCKET_NAME:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  NODE_VERSION: "22.17.1"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: spa/package-lock.json

      - name: Install Dependencies
        working-directory: spa
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Get CloudFormation Outputs
        id: cfn-outputs
        run: |
          API_ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name mkmemoportal-stack \
            --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" \
            --output text \
            --region ap-northeast-1)

          COGNITO_CLIENT_ID=$(aws cloudformation describe-stacks \
            --stack-name mkmemoportal-stack \
            --query "Stacks[0].Outputs[?OutputKey=='CognitoClientId'].OutputValue" \
            --output text \
            --region ap-northeast-1)

          echo "VITE_API_ENDPOINT=$API_ENDPOINT" >> $GITHUB_ENV
          echo "VITE_COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID" >> $GITHUB_ENV
          echo "VITE_COGNITO_DOMAIN=$COGNITO_DOMAIN" >> $GITHUB_ENV

      - name: Build SPA
        working-directory: spa
        run: npm run build
        env:
          VITE_API_ENDPOINT: ${{ env.VITE_API_ENDPOINT }}
          VITE_COGNITO_CLIENT_ID: ${{ env.VITE_COGNITO_CLIENT_ID }}
          VITE_COGNITO_DOMAIN: ${{ env.VITE_COGNITO_DOMAIN }}

      - name: Upload SPA Artifacts
        run: |
          aws s3 sync \
            spa/dist/ \
            s3://${{ inputs.S3_SPA_BUCKET_NAME }}/ \
            --delete \
            --region ap-northeast-1

      - name: Invalidate CloudFront Cache
        run: |
          CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
            --stack-name mkmemoportal-stack \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" \
            --output text \
            --region ap-northeast-1)

          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths "/*" \
            --region ap-northeast-1
